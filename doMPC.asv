clear; close all; clc;
%% Update all of the saved .mat files
updateAll("Y");
%% Offline
load System.mat
load cstrMat.mat
load CostMat.mat

x0 = [-0.5;0;0.2;-1];
x0hat = [0;0;0;0];
d = [0, 0];

[T,S] = predmodgen(sys,dim,x0);
L = getObserverGain(sys);

if any(cstr.X_cstr1*x0 >= cstr.X_cstr_b1)
    error("Initial state is outside of state set")
end


%% Initialisation
figure('Name', "Projected states"); hold on

n = 20; 
yRef = [2; 0];

xRef = zeros(dim.nx,n);
uRef = zeros(dim.nu,n);
[xRef,uRef] = getRef(yRef, sys, cstr)
uRefN = repmat(uRef, dim.N, 1);

x = [x0, zeros(dim.nx,n-1)]; % init
xhat = [x0hat, zeros(dim.nx,n-1)]; 
u = zeros(dim.nu, n); 
dhat = zeros(dim.ny,n);

if n < dim.N; error("Simulation time too short"); end

%% Online
u(:,1) = MPCgetInput(T, S, cstr, R_scld, Q_scld, P, dim, xRef,uRefN, x0hat, sys, 1);
for t = 2:n
    t
    x(:,t) = sys.A*x(:, t-1) + sys.B*u(:, t-1);
    [xhat, dhat, xRef, uRef] = Observer(L, xhat, dhat, x, u, sys);
    [T,S] = predmodgen(sys,dim,x(:,t));
    u(:,t) = MPCgetInput(T, S, cstr, R_scld, Q_scld, P, dim, xRef,uRefN, x(:,t), sys, t);
end

%% Plotting
subplot(2,2,1)
title("$\dot{z}$", 'Interpreter', 'latex')
hold on

hold off
subplot(2,2,2)
title("$\dot{\theta}$", 'Interpreter', 'latex')
subplot(2,2,3)
title("$\theta$", 'Interpreter', 'latex')
subplot(2,2,4)
title("z", 'Interpreter', 'latex')
hold off

%%
figure('Name', "Evolution", 'windowState', 'maximized')
subplot(2,1,1)
plot(0:sys.Ts:sys.Ts*(n-1), x')
title("States")
legend("$\dot{z}$", "$\dot{\theta}$", "$\theta$", "z", 'Interpreter', 'latex')
subplot(2,1,2)
plot(0:sys.Ts:sys.Ts*(n-1), u')
title("Inputs")
legend("$\delta_s$", "$\delta_b$", 'Interpreter', 'latex')
